<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">

    <Color x:Key="CardinalRed">#8c1515</Color>
    <Color x:Key="Magnolia">#f7f2fa</Color>
    <Color x:Key="ProcessBlack">#2e2d29</Color>
    <Color x:Key="CoolGrey">#53565a</Color>
    <Color x:Key="EerieBlack">#141414</Color>
    <Color x:Key="PaloAlto">#175e54</Color>
    <Color x:Key="CardinalRedLight">#b83a4b</Color>
    <Color x:Key="BrickDark">#42081b</Color>
    <Color x:Key="LagunitaLight">#009ab4</Color>
    <Color x:Key="EtonBlue">#85B79D</Color>

    <SolidColorBrush x:Key="BrushCardinalRed" Color="{DynamicResource CardinalRed}" />
    <SolidColorBrush x:Key="BrushMagnolia" Color="{DynamicResource Magnolia}" />
    <SolidColorBrush x:Key="BrushProcessBlack" Color="{DynamicResource ProcessBlack}" />
    <SolidColorBrush x:Key="BrushCoolGrey" Color="{DynamicResource CoolGrey}" />
    <SolidColorBrush x:Key="BrushEerieBlack" Color="{DynamicResource EerieBlack}" />
    <SolidColorBrush x:Key="BrushPaloAlto" Color="{DynamicResource PaloAlto}" />
    <SolidColorBrush x:Key="BrushCardinalRedLight" Color="{DynamicResource CardinalRedLight}" />
    <SolidColorBrush x:Key="BrushBrickDark" Color="{DynamicResource BrickDark}" />
    <SolidColorBrush x:Key="BrushLagunitaLight" Color="{DynamicResource LagunitaLight}" />
    <SolidColorBrush x:Key="BrushEtonBlue" Color="{DynamicResource EtonBlue}" />


    <LinearGradientBrush x:Key="BlacksGradient" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.0" Color="{DynamicResource EerieBlack}" />
        <GradientStop Offset="1.0" Color="{DynamicResource ColorXiketic}" />
    </LinearGradientBrush>
    <Style TargetType="{x:Type WebBrowser}" />
    <LinearGradientBrush x:Key="LightRedsGradient" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.0" Color="{DynamicResource CardinalRed}" />
        <GradientStop Offset="1.0" Color="{DynamicResource CardinalRedLight}" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="DarkRedsGradient" StartPoint="0,0" EndPoint="1,2">
        <GradientStop Offset="1.0" Color="{DynamicResource CardinalRed}" />
        <GradientStop Offset="0.5" Color="{DynamicResource BrickDark}" />
        <GradientStop Offset="0.0" Color="{DynamicResource CardinalRed}" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="GreensGradient" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.0" Color="{DynamicResource PaloAlto}" />
        <GradientStop Offset="1.0" Color="{DynamicResource EtonBlue}" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="BluesGradient" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.0" Color="{DynamicResource LagunitaLight}" />
        <GradientStop Offset="1.0" Color="{DynamicResource EtonBlue}" />
    </LinearGradientBrush>

    <Color x:Key="ColorCardinalRed">#ff8c1515</Color>
    <Color x:Key="CardinalBF">#9A2036</Color>
    <Color x:Key="ColorProcessBlack">#ff2e2d29</Color>
    <Color x:Key="ColorPrimaryWhite">#ffffff</Color>
    <Color x:Key="ColorControlBackground">#1E1E1E</Color>
    <Color x:Key="ColorCoolGrey">#53565A</Color>
    <Color x:Key="ColorEerieBlack">#141414</Color>
    <Color x:Key="ColorWindowBackground">#FF323232</Color>
    <Color x:Key="ColorXiketic">#1C0000</Color>
    <Color x:Key="ColorRaisinBlack">#271E1E</Color>
    <!--  Accent Palette  -->
    <Color x:Key="ColorPaloAlto">#175e54</Color>
    <Color x:Key="ColorBay">#6FA287</Color>
    <Color x:Key="ColorSky">#4298B5</Color>
    <Color x:Key="ColorPrimaryBlack">#000000</Color>
    <Color x:Key="ColorPoppy">#F9A44A</Color>
    <Color x:Key="ColorPlum">#620059</Color>
    <Color x:Key="ColorLagunita">#007C92</Color>
    <Color x:Key="ColorSpirited">#F4795B</Color>
    <Color x:Key="ColorWindowActive">#FF833AB4</Color>


    <!--  Brushes  -->
    <SolidColorBrush x:Key="BrushPrimaryWhite" Color="{StaticResource ColorPrimaryWhite}" />

    <SolidColorBrush x:Key="BrushControlBackground" Color="{StaticResource ColorControlBackground}" />

    <SolidColorBrush x:Key="BrushColorSKy" Color="{StaticResource ColorSky}" />


    <SolidColorBrush x:Key="BrushBay" Color="{StaticResource ColorBay}" />
    <SolidColorBrush x:Key="BrushPoppy" Color="{StaticResource ColorPoppy}" />
    <SolidColorBrush x:Key="BrushPlum" Color="{StaticResource ColorPlum}" />
    <SolidColorBrush x:Key="BrushLagunita" Color="{StaticResource ColorLagunita}" />
    <SolidColorBrush x:Key="BrushSpirited" Color="{StaticResource ColorSpirited}" />
    <SolidColorBrush x:Key="BrushWindowBackground" Color="{StaticResource ColorWindowBackground}" />
    <SolidColorBrush x:Key="BrushPrimaryBlack" Color="{DynamicResource ColorPrimaryBlack}" />

    <SolidColorBrush x:Key="BrushWindowActive" Color="{DynamicResource ColorWindowActive}" />
    <SolidColorBrush x:Key="BrushXiketic" Color="{DynamicResource ColorXiketic}" />
    <SolidColorBrush x:Key="BrushRaisinBlack" Color="{DynamicResource ColorRaisinBlack}" />
    <LinearGradientBrush x:Key="WindowHeaderGradient" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.0" Color="{StaticResource ColorCardinalRed}" />
        <GradientStop Offset="1.0" Color="{StaticResource ColorPlum}" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ComboBox.Static.Background.Gradient" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.0" Color="{DynamicResource EerieBlack}" />
        <GradientStop Offset="1.0" Color="{DynamicResource ColorXiketic}" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Static.Background" Color="{DynamicResource EerieBlack}" />
    <LinearGradientBrush x:Key="ComboBox.Static.Border.Gradient" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.0" Color="{DynamicResource CardinalRed}" />
        <GradientStop Offset="1.0" Color="{DynamicResource BrickDark}" />
    </LinearGradientBrush>
    <!--<SolidColorBrush x:Key="ComboBox.Static.Border" Color="{DynamicResource BrickDark}" />-->
    <!--<SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="{DynamicResource ColorCoolGrey}" />-->
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#1E1E1E" />
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="{DynamicResource BrickDark}" />
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent" />
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent" />
    <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="1.0" Color="#FF2E2D29" />
        <GradientStop Offset="0.0" Color="{DynamicResource ColorXiketic}" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="{DynamicResource LagunitaLight}" />
    <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="{DynamicResource LagunitaLight}" />
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#1E1E1E" />
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="{DynamicResource ColorXiketic}" />
    <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.0" Color="#FFEBF4FC" />
        <GradientStop Offset="1.0" Color="#FFDCECFC" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA" />
    <LinearGradientBrush x:Key="ComboBox.Pressed.Background" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.0" Color="#1E1E1E" />
        <GradientStop Offset="1.0" Color="#1E1E1E" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="{DynamicResource LagunitaLight}" />
    <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="{DynamicResource LagunitaLight}" />
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#1E1E1E" />
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5" />
    <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.0" Color="#FFDAEBFC" />
        <GradientStop Offset="1.0" Color="#FFC4E0FC" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent" />


    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="Foreground" Value="{DynamicResource BrushCardinalRed}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BrushCardinalRed}" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="Foreground" Value="{DynamicResource BrushMagnolia}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BrushBrickDark}" />
        <Setter Property="Background" Value="{DynamicResource BrushEerieBlack}" />
        <Setter Property="FontFamily" Value="Roboto" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="MinHeight" Value="28" />
    </Style>

    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource BrushCardinalRed}" />
    </Style>
    <Style x:Key="RoundedButton" BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Name="borderZero"
                        Background="{TemplateBinding Background}"
                        BorderBrush="Black"
                        BorderThickness="2"
                        CornerRadius="0,0,5,5">
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.8" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="Source Sans Pro" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Foreground" Value="{DynamicResource BrushMagnolia}" />
    </Style>
    <Style TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{DynamicResource BrushEerieBlack}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BrushXiketic}" />
        <Setter Property="Foreground" Value="{DynamicResource BrushMagnolia}" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect
                    BlurRadius="9"
                    Direction="270"
                    ShadowDepth="3" />
            </Setter.Value>
        </Setter>
    </Style>




    <Style x:Key="WindowStyle" TargetType="{x:Type Window}">
        <Setter Property="FontFamily" Value="Source Sans Pro Light" />
        <Setter Property="Foreground" Value="{StaticResource BrushMagnolia}" />
        <Setter Property="Background" Value="{StaticResource BrushProcessBlack}" />
    </Style>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="2"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource BrushBrickDark}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost"
                        Background="Transparent"
                        Focusable="false"
                        HorizontalScrollBarVisibility="Hidden"
                        VerticalScrollBarVisibility="Hidden" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot"
                        Background="{StaticResource ComboBox.Static.Background}"
                        BorderBrush="{DynamicResource BrushBrickDark}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <Border x:Name="splitBorder"
                            Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                            Margin="0"
                            HorizontalAlignment="Right"
                            BorderBrush="Transparent"
                            BorderThickness="1"
                            SnapsToDevicePixels="true">
                            <Path x:Name="arrow"
                                Margin="0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"
                                Fill="{StaticResource BrushCoolGrey}" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Static.Editable.Background}" />
                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Static.Editable.Border}" />
                            <Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.Static.Editable.Button.Background}" />
                            <Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.Static.Editable.Button.Border}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="arrow" Property="Fill" Value="{StaticResource ComboBox.MouseOver.Glyph}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource BrushEerieBlack}" />
                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.MouseOver.Border}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.MouseOver.Editable.Background}" />
                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.MouseOver.Editable.Border}" />
                            <Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}" />
                            <Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="arrow" Property="Fill" Value="{StaticResource ComboBox.Pressed.Glyph}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Pressed.Background}" />
                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Pressed.Border}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Pressed.Editable.Background}" />
                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Pressed.Editable.Border}" />
                            <Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}" />
                            <Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="arrow" Property="Fill" Value="{StaticResource ComboBox.Disabled.Glyph}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Disabled.Background}" />
                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Disabled.Border}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Disabled.Editable.Background}" />
                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Disabled.Editable.Border}" />
                            <Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}" />
                            <Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot"
            SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition
                    Width="0"
                    MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup"
                Grid.ColumnSpan="2"
                AllowsTransparency="true"
                IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                Placement="Bottom"
                PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <theme:SystemDropShadowChrome x:Name="shadow"
                    MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                    Color="Transparent">
                    <Border x:Name="dropDownBorder"
                        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                        BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                        BorderThickness="1">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid"
                                RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas"
                                    Width="0"
                                    Height="0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top">
                                    <Rectangle x:Name="opaqueRect"
                                        Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                        Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                        Fill="{Binding Background, ElementName=dropDownBorder}" />
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </theme:SystemDropShadowChrome>
            </Popup>
            <ToggleButton x:Name="toggleButton"
                Grid.ColumnSpan="2"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                Style="{StaticResource ComboBoxToggleButton}" />
            <Border x:Name="border"
                Margin="{TemplateBinding BorderThickness}"
                Background="{StaticResource TextBox.Static.Background}">
                <TextBox x:Name="PART_EditableTextBox"
                    Margin="{TemplateBinding Padding}"
                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                    IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                    Style="{StaticResource ComboBoxEditableTextBox}" />
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="border" Property="Opacity" Value="0.56" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
                <Setter TargetName="shadow" Property="Margin" Value="0,0,5,5" />
                <Setter TargetName="shadow" Property="Color" Value="#000000" />
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot"
            SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition
                    Width="0"
                    MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup"
                Grid.ColumnSpan="2"
                Margin="1"
                AllowsTransparency="true"
                IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                Placement="Bottom"
                PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <theme:SystemDropShadowChrome x:Name="shadow"
                    MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                    Color="Transparent">
                    <Border x:Name="dropDownBorder"
                        Background="{DynamicResource BrushEerieBlack}"
                        BorderBrush="{DynamicResource BrushBrickDark}"
                        BorderThickness="1">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid"
                                RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas"
                                    Width="0"
                                    Height="0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top">
                                    <Rectangle x:Name="opaqueRect"
                                        Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                        Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                        Fill="{Binding Background, ElementName=dropDownBorder}" />
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </theme:SystemDropShadowChrome>
            </Popup>
            <ToggleButton x:Name="toggleButton"
                Grid.ColumnSpan="2"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                Style="{StaticResource ComboBoxToggleButton}" />
            <ContentPresenter x:Name="contentPresenter"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{TemplateBinding SelectionBoxItem}"
                ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                IsHitTestVisible="false"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
                <Setter TargetName="shadow" Property="Margin" Value="0,0,5,5" />
                <Setter TargetName="shadow" Property="Color" Value="#71000000" />
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource BrushEerieBlack}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BrushCardinalRed}" />
        <Setter Property="Foreground" Value="{DynamicResource BrushMagnolia}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Padding" Value="6,3,5,3" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}" />
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Padding" Value="2" />
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>



    <Style x:Key="FlipButton" BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
        <Style.Triggers>
            <Trigger Property="Visibility" Value="Visible">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                AutoReverse="True"
                                RepeatBehavior="Forever"
                                Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                From="1.0"
                                To="-1.0"
                                Duration="0:0:2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource BrushCardinalRed}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <StackPanel Orientation="Horizontal">
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border x:Name="on"
                            Width="25"
                            Height="25"
                            Margin="10,0,0,0"
                            Background="#141414"
                            CornerRadius="2,0,0,4">
                            <TextBlock x:Name="onText"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Foreground="{DynamicResource BrushCoolGrey}"
                                Text="On" />
                        </Border>
                        <Border x:Name="off"
                            Width="25"
                            Height="25"
                            Background="#141414"
                            CornerRadius="0,2,4,0">
                            <TextBlock x:Name="offText"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Foreground="{DynamicResource BrushCoolGrey}"
                                Text="Off" />
                        </Border>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{StaticResource BrushPrimaryWhite}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="on" Property="Background" Value="{StaticResource BrushCardinalRed}" />
                            <Setter TargetName="onText" Property="Foreground" Value="{StaticResource BrushPrimaryWhite}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="off" Property="Background" Value="{StaticResource BrushCardinalRed}" />
                            <Setter TargetName="offText" Property="Foreground" Value="{StaticResource BrushPrimaryWhite}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="IconFlipButton" TargetType="{x:Type ButtonBase}">
        <Border x:Name="border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="true">
            <ContentPresenter x:Name="contentPresenter"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Focusable="False"
                RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{DynamicResource BrushCardinalRedLight}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">

                <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="border" Property="Background" Value="Transparent" />
                <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />

            </Trigger>
            <!--<Trigger Property="Visibility" Value="Visible">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                AutoReverse="True"
                                RepeatBehavior="Forever"
                                Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                From="1.0"
                                To="-1.0"
                                Duration="0:0:2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>-->
        </ControlTemplate.Triggers>

    </ControlTemplate>

    <Style x:Key="IconButton" TargetType="{x:Type Button}">
        <Setter Property="Template" Value="{StaticResource IconFlipButton}" />
        <!--<Style.Triggers>


            <Trigger Property="Visibility" Value="Visible">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation AutoReverse="True" Duration="0:0:2" From="1.0" RepeatBehavior="Forever" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To="-1.0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>

        </Style.Triggers>-->
    </Style>
</ResourceDictionary>