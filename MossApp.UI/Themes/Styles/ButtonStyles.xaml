<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource BrushCardinalRed}" />
    </Style>

    <Style x:Key="FlipButton" TargetType="Button">
        <Style.Triggers>
            <!--<Trigger Property="Visibility" Value="Visible">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                AutoReverse="True"
                                RepeatBehavior="Forever"
                                Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                From="1.0"
                                To="-1.0"
                                Duration="0:0:2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>-->
            <!--<Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="{DynamicResource BrushCardinalRedLight}" />
            </Trigger>-->
        </Style.Triggers>
        
       
    </Style>
    <ControlTemplate x:Key="IconFlipButton" TargetType="{x:Type ButtonBase}">
        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>
           
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource BrushCardinalRedLight}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Foreground" Value="Transparent"/>
                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
               
            </Trigger>
            <Trigger Property="Visibility" Value="Visible">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation AutoReverse="True" Duration="0:0:2" From="1.0" RepeatBehavior="Forever" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To="-1.0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
        </ControlTemplate.Triggers>
        <ControlTemplate.Resources>
            <Storyboard x:Key="MouseOverAnimation" Storyboard.TargetProperty="Color">
                <ColorAnimation Storyboard.TargetName="ButtonBorderGradientStop1" To="#ffefefff" Duration="0:0:0.2" />
                <ColorAnimation Storyboard.TargetName="ButtonBorderGradientStop2" To="#ffc7c7ff" Duration="0:0:0.2" />
            </Storyboard>
            <Storyboard x:Key="MouseOutAnimation" Storyboard.TargetProperty="Color"
                FillBehavior="Stop">
                <!-- <=================== -->
                <ColorAnimation Storyboard.TargetName="ButtonBorderGradientStop1" To="#ffeeeeee" Duration="0:0:0.2" />
                <ColorAnimation Storyboard.TargetName="ButtonBorderGradientStop2" To="#ffcccccc" Duration="0:0:0.2" />
            </Storyboard>
            <Storyboard x:Key="MouseDownAnimation" Storyboard.TargetProperty="Color">
                <ColorAnimation Storyboard.TargetName="ButtonBorderGradientStop1" To="#ffc7c7ff" Duration="0:0:0.1" />
                <ColorAnimation Storyboard.TargetName="ButtonBorderGradientStop2" To="#ff9a9aff" Duration="0:0:0.1" />
            </Storyboard>
            <Storyboard x:Key="MouseUpAnimation" Storyboard.TargetProperty="Color"
                FillBehavior="Stop">
                <!-- <=================== -->
                <ColorAnimation Storyboard.TargetName="ButtonBorderGradientStop1" To="#ffefefff" Duration="0:0:0.1" />
                <ColorAnimation Storyboard.TargetName="ButtonBorderGradientStop2" To="#ffc7c7ff" Duration="0:0:0.1" />
            </Storyboard>
        </ControlTemplate.Resources>
    </ControlTemplate>
    
    <Style x:Key="IconButton" TargetType="{x:Type Button}">
        <Setter Property="Template" Value="{StaticResource IconFlipButton}"/>
        <Style.Triggers>
           
           
            <!--<Trigger Property="Visibility" Value="Visible">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation AutoReverse="True" Duration="0:0:2" From="1.0" RepeatBehavior="Forever" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To="-1.0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>-->
           
        </Style.Triggers>
    </Style>


    <Style TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource BrushCardinalRed}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <StackPanel Orientation="Horizontal">
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border x:Name="on"
                            Width="25"
                            Height="25"
                            Margin="10,0,0,0"
                            Background="#313131"
                            CornerRadius="2,0,0,4">
                            <TextBlock x:Name="onText"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Text="On" />
                        </Border>
                        <Border x:Name="off"
                            Width="25"
                            Height="25"
                            Background="#313131"
                            CornerRadius="0,2,4,0">
                            <TextBlock x:Name="offText"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Text="Off" />
                        </Border>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{StaticResource BrushMagnolia}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="on" Property="Background" Value="{StaticResource BrushCardinalRed}" />
                            <Setter TargetName="onText" Property="Foreground" Value="{StaticResource BrushMagnolia}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="off" Property="Background" Value="{StaticResource BrushCardinalRed}" />
                            <Setter TargetName="offText" Property="Foreground" Value="{StaticResource BrushMagnolia}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>






</ResourceDictionary>