<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource BrushCardinalRed}" />
    </Style>

    <Style x:Key="FlipButton" TargetType="Button">
        <Style.Triggers>
            <!--<Trigger Property="Visibility" Value="Visible">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                AutoReverse="True"
                                RepeatBehavior="Forever"
                                Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                From="1.0"
                                To="-1.0"
                                Duration="0:0:2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>-->
            <!--<Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="{DynamicResource BrushCardinalRedLight}" />
            </Trigger>-->
        </Style.Triggers>


    </Style>
    <ControlTemplate x:Key="IconFlipButton" TargetType="{x:Type ButtonBase}">
        <Border x:Name="border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="true">
            <ContentPresenter x:Name="contentPresenter"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Focusable="False"
                RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{DynamicResource BrushCardinalRedLight}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                
                <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="border" Property="Background" Value="Transparent" />
                <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />

            </Trigger>
            <!--<Trigger Property="Visibility" Value="Visible">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                AutoReverse="True"
                                RepeatBehavior="Forever"
                                Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                From="1.0"
                                To="-1.0"
                                Duration="0:0:2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>-->
        </ControlTemplate.Triggers>
      
    </ControlTemplate>

    <Style x:Key="IconButton" TargetType="{x:Type Button}">
        <Setter Property="Template" Value="{StaticResource IconFlipButton}" />
        <!--<Style.Triggers>


            <Trigger Property="Visibility" Value="Visible">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation AutoReverse="True" Duration="0:0:2" From="1.0" RepeatBehavior="Forever" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To="-1.0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>

        </Style.Triggers>-->
    </Style>

    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="2"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource BrushBrickDark}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource BrushCardinalRed}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <StackPanel Orientation="Horizontal">
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border x:Name="on"
                            Width="25"
                            Height="25"
                            Margin="10,0,0,0"
                            Background="#313131"
                            CornerRadius="2,0,0,4">
                            <TextBlock x:Name="onText"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Text="On" />
                        </Border>
                        <Border x:Name="off"
                            Width="25"
                            Height="25"
                            Background="#313131"
                            CornerRadius="0,2,4,0">
                            <TextBlock x:Name="offText"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Text="Off" />
                        </Border>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#53565A" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="on" Property="Background" Value="{DynamicResource BrushCardinalRed}" />
                            <Setter TargetName="onText" Property="Foreground" Value="{DynamicResource BrushMagnolia}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="on" Property="Background" Value="{DynamicResource BrushCardinalRed}" />
                            <Setter TargetName="onText" Property="Foreground" Value="{DynamicResource BrushMagnolia}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--<Style TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource BrushCardinalRed}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <StackPanel Orientation="Horizontal">
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border x:Name="on"
                            Width="25"
                            Height="25"
                            Margin="10,0,0,0"
                            Background="#313131"
                            CornerRadius="2,0,0,4">
                            <TextBlock x:Name="onText"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Text="On" />
                        </Border>
                        <Border x:Name="off"
                            Width="25"
                            Height="25"
                            Background="#313131"
                            CornerRadius="0,2,4,0">
                            <TextBlock x:Name="offText"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Text="Off" />
                        </Border>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{StaticResource BrushMagnolia}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="on" Property="Background" Value="{StaticResource BrushCardinalRed}" />
                            <Setter TargetName="onText" Property="Foreground" Value="{StaticResource BrushMagnolia}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="off" Property="Background" Value="{StaticResource BrushCardinalRed}" />
                            <Setter TargetName="offText" Property="Foreground" Value="{StaticResource BrushMagnolia}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->






</ResourceDictionary>